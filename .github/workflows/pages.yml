# Workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Page

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          # Not needed with a .ruby-version file
          ruby-version: "3.2.2"
          # Runs 'bundle install' and caches installed gems automatically
          bundler-cache: true

      - name: Version info
        run: |
          ruby --version
          gem --version
          bundle --version
      - name: Install cwebp
        run: |
          sudo apt-get install webp 

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v1
      # - name: adding react project
        # run : make react

      - name: Checking Jekyll configuration
        run: bundle exec jekyll doctor

      - name: Build with Jekyll
        # Defaults output to '/_site'
        run: bundle exec jekyll build --baseurl ${{ steps.pages.outputs.base_path }} --profile --trace
        env:
          JEKYLL_ENV: production
          RECAPTCHA_SITEKEY: ${{ secrets.RECAPTCHA_SITEKEY }}
          EMAILJS_SITEKEY: ${{ secrets.EMAILJS_SITEKEY }}
          

      - name: Upload artifact
        # This will automatically upload an artifact from the '/_site' directory
        uses: actions/upload-pages-artifact@v3
        if: ${{ success() && github.ref == 'refs/heads/main' }}
        with:
          path: ./_site/

      - name: Cleaning up
        run: bundle exec jekyll clean

  # Deployment job
  deploy:
    name: deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        if: ${{ success() }}
